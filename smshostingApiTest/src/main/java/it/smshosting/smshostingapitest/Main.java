/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.smshosting.smshostingapitest;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonElement;
import com.google.gson.JsonParser;
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Source;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;

/**
 *
 * @author roberto
 */
public class Main extends javax.swing.JDialog {

    /**
     * Creates new form main
     */
    public Main(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        auth_key = new javax.swing.JTextField();
        auth_secret = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        tab = new javax.swing.JTabbedPane();
        jPUser = new javax.swing.JPanel();
        userUrl = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        userGet = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        userAccept = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        userResponse = new javax.swing.JTextArea();
        jPSMSSend = new javax.swing.JPanel();
        smsSendPost = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        smsSendAccept = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        smsSendResult = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        smsSendUrl = new javax.swing.JTextField();
        smsSendFrom = new javax.swing.JTextField();
        smsSendTo = new javax.swing.JTextField();
        smsSendGroup = new javax.swing.JTextField();
        smsSendText = new javax.swing.JTextField();
        smsSendDate = new javax.swing.JTextField();
        smsSendTransaction = new javax.swing.JTextField();
        smsSendCallBack = new javax.swing.JTextField();
        smsSendSandbox = new javax.swing.JCheckBox();
        smsSendEncoding = new javax.swing.JComboBox<>();
        jLabel81 = new javax.swing.JLabel();
        jPSendbulk = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        smsSendbulkUrl = new javax.swing.JTextField();
        smsSendbulkFrom = new javax.swing.JTextField();
        smsSendbulkTo = new javax.swing.JTextField();
        smsSendbulkGroup = new javax.swing.JTextField();
        smsSendbulkText = new javax.swing.JTextField();
        smsSendbulkDate = new javax.swing.JTextField();
        smsSendbulkTransaction = new javax.swing.JTextField();
        smsSendbulkCallback = new javax.swing.JTextField();
        smsSendbulkSandbox = new javax.swing.JCheckBox();
        smsSendbulkEncoding = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        smsSendbulkResult = new javax.swing.JTextArea();
        smsSendbulkPost = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        smsSendbulkAccept = new javax.swing.JComboBox<>();
        jLabel82 = new javax.swing.JLabel();
        jPEstimate = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        smsEstimateUrl = new javax.swing.JTextField();
        smsEstimateFrom = new javax.swing.JTextField();
        smsEstimateTo = new javax.swing.JTextField();
        smsEstimateGroup = new javax.swing.JTextField();
        smsEstimateText = new javax.swing.JTextField();
        smsEstimateEncoding = new javax.swing.JComboBox<>();
        smsEstimatePost = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        smsEstimateAccept = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        smsEstimateResult = new javax.swing.JTextArea();
        jPSmsCancel = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        smsCancelUrl = new javax.swing.JTextField();
        smsCancelId = new javax.swing.JTextField();
        smsCancelTransaction = new javax.swing.JTextField();
        smsCancelPost = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        smsCancelAccept = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        smsCancelResponse = new javax.swing.JTextArea();
        jpSmsSearch = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        smsSearchUrl = new javax.swing.JTextField();
        smsSearchId = new javax.swing.JTextField();
        smsSearchTransaction = new javax.swing.JTextField();
        smsSearchMsisdn = new javax.swing.JTextField();
        smsSearchFromDate = new javax.swing.JTextField();
        smsSearchToDate = new javax.swing.JTextField();
        smsSearchStatus = new javax.swing.JTextField();
        smsSearchOffset = new javax.swing.JTextField();
        smsSearchLimit = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        smsSearchResult = new javax.swing.JTextArea();
        smsSearchGet = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        smsSearchAccept = new javax.swing.JComboBox<>();
        jLabel83 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        jPSmsRecvSearch = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        smsRecvSearchUrl = new javax.swing.JTextField();
        smsRecvSearchFrom = new javax.swing.JTextField();
        smsRecvSearchSimRefId = new javax.swing.JTextField();
        smsRecvSearchFromDate = new javax.swing.JTextField();
        smsRecvSearchToDate = new javax.swing.JTextField();
        smsRecvSearchOffset = new javax.swing.JTextField();
        smsRecvSearchLimit = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        smsRecvSearchResponse = new javax.swing.JTextArea();
        smsRecvSearchGet = new javax.swing.JButton();
        jLabel55 = new javax.swing.JLabel();
        smsRecvSearchAccept = new javax.swing.JComboBox<>();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jPSmsSimList = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        smsSimListUrl = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        smsSimListResponse = new javax.swing.JTextArea();
        smsSimListGet = new javax.swing.JToggleButton();
        jLabel57 = new javax.swing.JLabel();
        smsSimListAccept = new javax.swing.JComboBox<>();
        jPOtpSend = new javax.swing.JPanel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        otpSendUrl = new javax.swing.JTextField();
        otpSendTo = new javax.swing.JTextField();
        otpSendText = new javax.swing.JTextField();
        otpSendFrom = new javax.swing.JTextField();
        otpSendAppId = new javax.swing.JTextField();
        otpSendCodeLen = new javax.swing.JTextField();
        otpSendMaxRetry = new javax.swing.JTextField();
        otpSendTtl = new javax.swing.JTextField();
        jScrollPane9 = new javax.swing.JScrollPane();
        otpSendResponse = new javax.swing.JTextArea();
        otpSendPost = new javax.swing.JButton();
        jLabel68 = new javax.swing.JLabel();
        otpSendAccept = new javax.swing.JComboBox<>();
        otpSendSandbox = new javax.swing.JCheckBox();
        otpSendEncoding = new javax.swing.JComboBox<>();
        jPOtpCheck = new javax.swing.JPanel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        otpCheckUrl = new javax.swing.JTextField();
        otpCheckVerifyId = new javax.swing.JTextField();
        otpCheckVerifyCode = new javax.swing.JTextField();
        otpCheckIpAddress = new javax.swing.JTextField();
        jScrollPane10 = new javax.swing.JScrollPane();
        otpCheckResponse = new javax.swing.JTextArea();
        otpCheckGet = new javax.swing.JButton();
        jLabel73 = new javax.swing.JLabel();
        otpCheckAccept = new javax.swing.JComboBox<>();
        jPOtpSearch = new javax.swing.JPanel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        otpSearchUrl = new javax.swing.JTextField();
        otpSearchVerifyId = new javax.swing.JTextField();
        otpSearchGet = new javax.swing.JButton();
        jLabel76 = new javax.swing.JLabel();
        otpSearchAccept = new javax.swing.JComboBox<>();
        jScrollPane11 = new javax.swing.JScrollPane();
        otpSearchResponse = new javax.swing.JTextArea();
        jPOtpCommand = new javax.swing.JPanel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        otpCommandUrl = new javax.swing.JTextField();
        otpCommandVerifyId = new javax.swing.JTextField();
        otpCommandCommand = new javax.swing.JTextField();
        jScrollPane12 = new javax.swing.JScrollPane();
        otpCommandResponse = new javax.swing.JTextArea();
        otpCommandPost = new javax.swing.JButton();
        jLabel80 = new javax.swing.JLabel();
        otpCommandAccept = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("iContact sample");

        jLabel1.setText("AUTH_KEY");

        jLabel2.setText("AUTH_SECRET");

        jButton1.setText("save setting");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("load setting");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPUser.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userUrl.setText("https://api.smshosting.it/rest/api/user");
        jPUser.add(userUrl, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 12, 640, -1));

        jLabel3.setText("Url");
        jPUser.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 15, -1, -1));

        userGet.setText("GET");
        userGet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userGetActionPerformed(evt);
            }
        });
        jPUser.add(userGet, new org.netbeans.lib.awtextra.AbsoluteConstraints(1097, 11, 150, -1));

        jLabel4.setText("Accept");
        jPUser.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 50, 101, -1));

        userAccept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "application/json", "application/xml" }));
        jPUser.add(userAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(1097, 72, 150, -1));

        userResponse.setColumns(20);
        userResponse.setRows(5);
        jScrollPane1.setViewportView(userResponse);

        jPUser.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 103, 1247, 517));

        tab.addTab("User", jPUser);

        jPSMSSend.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        smsSendPost.setText("POST");
        smsSendPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smsSendPostActionPerformed(evt);
            }
        });
        jPSMSSend.add(smsSendPost, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 11, 147, -1));

        jLabel5.setText("Accept");
        jPSMSSend.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 50, -1, -1));

        smsSendAccept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "application/json", "application/xml" }));
        jPSMSSend.add(smsSendAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 76, 147, -1));

        smsSendResult.setColumns(20);
        smsSendResult.setRows(5);
        jScrollPane2.setViewportView(smsSendResult);

        jPSMSSend.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 342, 1257, 278));

        jLabel6.setText("url");
        jPSMSSend.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 13, -1, -1));

        jLabel7.setText("from");
        jPSMSSend.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 33, -1, -1));

        jLabel8.setText("to");
        jPSMSSend.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel9.setText("group");
        jPSMSSend.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jLabel10.setText("text");
        jPSMSSend.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jLabel11.setText("date");
        jPSMSSend.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jLabel12.setText("transactionId");
        jPSMSSend.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        jLabel13.setText("sandbox");
        jPSMSSend.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));

        jLabel14.setText("statusCallback");
        jPSMSSend.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, -1));

        jLabel15.setText("encoding");
        jPSMSSend.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, -1, -1));

        smsSendUrl.setText("https://api.smshosting.it/rest/api/sms/send");
        jPSMSSend.add(smsSendUrl, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 7, 630, -1));
        jPSMSSend.add(smsSendFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 33, 630, -1));
        jPSMSSend.add(smsSendTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 630, -1));
        jPSMSSend.add(smsSendGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 630, -1));
        jPSMSSend.add(smsSendText, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 630, -1));
        jPSMSSend.add(smsSendDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 630, -1));
        jPSMSSend.add(smsSendTransaction, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 630, -1));
        jPSMSSend.add(smsSendCallBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, 630, -1));

        smsSendSandbox.setSelected(true);
        jPSMSSend.add(smsSendSandbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 205, 961, 27));

        smsSendEncoding.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "7BIT", "UCS2", "AUTO" }));
        jPSMSSend.add(smsSendEncoding, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 113, -1));

        jLabel81.setText("Ex: 2016-01-31T15:00:00+0100");
        jPSMSSend.add(jLabel81, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 160, 280, -1));

        tab.addTab("SMS send", jPSMSSend);

        jPSendbulk.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setText("url");
        jPSendbulk.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 14, -1, -1));

        jLabel17.setText("from");
        jPSendbulk.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 37, -1, -1));

        jLabel18.setText("to");
        jPSendbulk.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 62, -1, -1));

        jLabel19.setText("group");
        jPSendbulk.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 89, -1, -1));

        jLabel20.setText("text");
        jPSendbulk.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 115, -1, -1));

        jLabel21.setText("date");
        jPSendbulk.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 141, -1, -1));

        jLabel22.setText("transactionId");
        jPSendbulk.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        jLabel23.setText("sandbox");
        jPSendbulk.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 196, -1, -1));

        jLabel24.setText("statusCallback");
        jPSendbulk.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 224, -1, -1));

        jLabel25.setText("encoding");
        jPSendbulk.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 248, -1, -1));

        smsSendbulkUrl.setText("https://api.smshosting.it/rest/api/sms/sendbulk");
        jPSendbulk.add(smsSendbulkUrl, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 11, 630, -1));
        jPSendbulk.add(smsSendbulkFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 37, 630, -1));
        jPSendbulk.add(smsSendbulkTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 63, 630, -1));
        jPSendbulk.add(smsSendbulkGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 89, 630, -1));
        jPSendbulk.add(smsSendbulkText, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 115, 630, -1));
        jPSendbulk.add(smsSendbulkDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 141, 630, -1));
        jPSendbulk.add(smsSendbulkTransaction, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 167, 630, -1));
        jPSendbulk.add(smsSendbulkCallback, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 216, 630, -1));

        smsSendbulkSandbox.setSelected(true);
        jPSendbulk.add(smsSendbulkSandbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 195, -1, -1));

        smsSendbulkEncoding.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "7BIT", "UCS2", "AUTO" }));
        jPSendbulk.add(smsSendbulkEncoding, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, -1, -1));

        smsSendbulkResult.setColumns(20);
        smsSendbulkResult.setRows(5);
        jScrollPane3.setViewportView(smsSendbulkResult);

        jPSendbulk.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 1247, 350));

        smsSendbulkPost.setText("POST");
        smsSendbulkPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smsSendbulkPostActionPerformed(evt);
            }
        });
        jPSendbulk.add(smsSendbulkPost, new org.netbeans.lib.awtextra.AbsoluteConstraints(1087, 11, 160, -1));

        jLabel26.setText("Accept");
        jPSendbulk.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 50, -1, -1));

        smsSendbulkAccept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "application/json", "application/xml" }));
        jPSendbulk.add(smsSendbulkAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(1087, 65, 160, -1));

        jLabel82.setText("Ex: 2016-01-31T15:00:00+0100");
        jPSendbulk.add(jLabel82, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 150, 280, -1));

        tab.addTab("SMS sendbulk", jPSendbulk);

        jPEstimate.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel27.setText("url");
        jPEstimate.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 22, -1, -1));

        jLabel28.setText("from");
        jPEstimate.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 48, -1, -1));

        jLabel29.setText("to");
        jPEstimate.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 74, -1, -1));

        jLabel30.setText("group");
        jPEstimate.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jLabel31.setText("text");
        jPEstimate.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 126, -1, -1));

        jLabel32.setText("encoding");
        jPEstimate.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 149, -1, -1));

        smsEstimateUrl.setText("https://api.smshosting.it/rest/api/sms/estimate");
        jPEstimate.add(smsEstimateUrl, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 19, 640, -1));
        jPEstimate.add(smsEstimateFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 45, 640, -1));
        jPEstimate.add(smsEstimateTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 71, 640, -1));
        jPEstimate.add(smsEstimateGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 97, 640, -1));
        jPEstimate.add(smsEstimateText, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 123, 640, -1));

        smsEstimateEncoding.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "7BIT", "UCS2", "AUTO" }));
        jPEstimate.add(smsEstimateEncoding, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 90, -1));

        smsEstimatePost.setText("POST");
        smsEstimatePost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smsEstimatePostActionPerformed(evt);
            }
        });
        jPEstimate.add(smsEstimatePost, new org.netbeans.lib.awtextra.AbsoluteConstraints(1078, 11, 169, -1));

        jLabel33.setText("Accept");
        jPEstimate.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 60, -1, -1));

        smsEstimateAccept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "application/json", "application/xml" }));
        jPEstimate.add(smsEstimateAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(1078, 76, 169, -1));

        smsEstimateResult.setColumns(20);
        smsEstimateResult.setRows(5);
        jScrollPane4.setViewportView(smsEstimateResult);

        jPEstimate.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 187, 1257, 433));

        tab.addTab("SMS estimate", jPEstimate);

        jPSmsCancel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel34.setText("url");
        jPSmsCancel.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, -1, -1));

        jLabel35.setText("id");
        jPSmsCancel.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 43, -1, -1));

        jLabel36.setText("transactioId");
        jPSmsCancel.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 69, -1, -1));

        smsCancelUrl.setText("https://api.smshosting.it/rest/api/sms/cancel");
        jPSmsCancel.add(smsCancelUrl, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 12, 640, -1));
        jPSmsCancel.add(smsCancelId, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 40, 640, -1));
        jPSmsCancel.add(smsCancelTransaction, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 66, 640, -1));

        smsCancelPost.setText("POST");
        smsCancelPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smsCancelPostActionPerformed(evt);
            }
        });
        jPSmsCancel.add(smsCancelPost, new org.netbeans.lib.awtextra.AbsoluteConstraints(1096, 11, 151, -1));

        jLabel37.setText("Accept");
        jPSmsCancel.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 50, -1, -1));

        smsCancelAccept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "application/json", "application/xml" }));
        jPSmsCancel.add(smsCancelAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(1096, 72, 151, -1));

        smsCancelResponse.setColumns(20);
        smsCancelResponse.setRows(5);
        jScrollPane5.setViewportView(smsCancelResponse);

        jPSmsCancel.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 103, 1257, 517));

        tab.addTab("SMS Cancel", jPSmsCancel);

        jpSmsSearch.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel38.setText("url");
        jpSmsSearch.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, -1, -1));

        jLabel39.setText("id");
        jpSmsSearch.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 43, -1, -1));

        jLabel40.setText("transactionId");
        jpSmsSearch.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 69, -1, -1));

        jLabel41.setText("msisdn");
        jpSmsSearch.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 95, -1, -1));

        jLabel42.setText("fromDate");
        jpSmsSearch.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 121, -1, -1));

        jLabel43.setText("toDate");
        jpSmsSearch.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 147, -1, -1));

        jLabel44.setText("status");
        jpSmsSearch.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 173, -1, -1));

        jLabel45.setText("offset");
        jpSmsSearch.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 199, -1, -1));

        jLabel46.setText("limit");
        jpSmsSearch.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 225, -1, -1));

        smsSearchUrl.setText("https://api.smshosting.it/rest/api/sms/search");
        jpSmsSearch.add(smsSearchUrl, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 12, 620, -1));
        jpSmsSearch.add(smsSearchId, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 40, 620, -1));
        jpSmsSearch.add(smsSearchTransaction, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 66, 620, -1));
        jpSmsSearch.add(smsSearchMsisdn, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 92, 620, -1));
        jpSmsSearch.add(smsSearchFromDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 118, 620, -1));
        jpSmsSearch.add(smsSearchToDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 144, 620, -1));
        jpSmsSearch.add(smsSearchStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 170, 620, -1));
        jpSmsSearch.add(smsSearchOffset, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 196, 620, -1));
        jpSmsSearch.add(smsSearchLimit, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 222, 620, -1));

        smsSearchResult.setColumns(20);
        smsSearchResult.setRows(5);
        jScrollPane6.setViewportView(smsSearchResult);

        jpSmsSearch.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 329, 1257, 291));

        smsSearchGet.setText("GET");
        smsSearchGet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smsSearchGetActionPerformed(evt);
            }
        });
        jpSmsSearch.add(smsSearchGet, new org.netbeans.lib.awtextra.AbsoluteConstraints(1102, 11, 145, -1));

        jLabel47.setText("Accept");
        jpSmsSearch.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 50, -1, -1));

        smsSearchAccept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "application/json", "application/xml" }));
        jpSmsSearch.add(smsSearchAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 70, 145, -1));

        jLabel83.setText("Ex: 2016-01-31T15:00:00+0100");
        jpSmsSearch.add(jLabel83, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 120, 280, -1));

        jLabel84.setText("Ex: 2016-01-31T15:00:00+0100");
        jpSmsSearch.add(jLabel84, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 150, 280, -1));

        tab.addTab("SMS search", jpSmsSearch);

        jPSmsRecvSearch.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel48.setText("url");
        jPSmsRecvSearch.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, -1, -1));

        jLabel49.setText("from");
        jPSmsRecvSearch.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 43, -1, -1));

        jLabel50.setText("simIdRef");
        jPSmsRecvSearch.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 69, -1, -1));

        jLabel51.setText("fromDate");
        jPSmsRecvSearch.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 95, -1, -1));

        jLabel52.setText("toDate");
        jPSmsRecvSearch.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 121, -1, -1));

        jLabel53.setText("offset");
        jPSmsRecvSearch.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 147, -1, -1));

        jLabel54.setText("limit");
        jPSmsRecvSearch.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 173, -1, -1));

        smsRecvSearchUrl.setText("https://api.smshosting.it/rest/api/sms/received/search");
        jPSmsRecvSearch.add(smsRecvSearchUrl, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 12, 630, -1));
        jPSmsRecvSearch.add(smsRecvSearchFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 40, 630, -1));
        jPSmsRecvSearch.add(smsRecvSearchSimRefId, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 66, 630, -1));
        jPSmsRecvSearch.add(smsRecvSearchFromDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 92, 630, -1));
        jPSmsRecvSearch.add(smsRecvSearchToDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 118, 630, -1));
        jPSmsRecvSearch.add(smsRecvSearchOffset, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 144, 630, -1));
        jPSmsRecvSearch.add(smsRecvSearchLimit, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 170, 630, -1));

        smsRecvSearchResponse.setColumns(20);
        smsRecvSearchResponse.setRows(5);
        jScrollPane7.setViewportView(smsRecvSearchResponse);

        jPSmsRecvSearch.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 208, 1257, 412));

        smsRecvSearchGet.setText("GET");
        smsRecvSearchGet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smsRecvSearchGetActionPerformed(evt);
            }
        });
        jPSmsRecvSearch.add(smsRecvSearchGet, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 11, 167, -1));

        jLabel55.setText("Accept");
        jPSmsRecvSearch.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 60, -1, -1));

        smsRecvSearchAccept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "application/json", "application/xml" }));
        jPSmsRecvSearch.add(smsRecvSearchAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 80, 167, -1));

        jLabel85.setText("Ex: 2016-01-31T15:00:00+0100");
        jPSmsRecvSearch.add(jLabel85, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 100, 280, -1));

        jLabel86.setText("Ex: 2016-01-31T15:00:00+0100");
        jPSmsRecvSearch.add(jLabel86, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 120, 280, -1));

        tab.addTab("SMS RECV search", jPSmsRecvSearch);

        jPSmsSimList.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel56.setText("url");
        jPSmsSimList.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, -1, -1));

        smsSimListUrl.setText("https://api.smshosting.it/rest/api/sms/received/sim/list");
        jPSmsSimList.add(smsSimListUrl, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 12, 640, -1));

        smsSimListResponse.setColumns(20);
        smsSimListResponse.setRows(5);
        jScrollPane8.setViewportView(smsSimListResponse);

        jPSmsSimList.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 1257, 510));

        smsSimListGet.setText("GET");
        smsSimListGet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smsSimListGetActionPerformed(evt);
            }
        });
        jPSmsSimList.add(smsSimListGet, new org.netbeans.lib.awtextra.AbsoluteConstraints(1073, 11, 174, -1));

        jLabel57.setText("Accept");
        jPSmsSimList.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 50, -1, -1));

        smsSimListAccept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "application/json", "application/xml" }));
        jPSmsSimList.add(smsSimListAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(1073, 72, 174, -1));

        tab.addTab("SMS SIM list", jPSmsSimList);

        jPOtpSend.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel58.setText("url");
        jPOtpSend.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, -1, -1));

        jLabel59.setText("to");
        jPOtpSend.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 43, -1, -1));

        jLabel60.setText("text");
        jPOtpSend.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 69, -1, -1));

        jLabel61.setText("from");
        jPOtpSend.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 95, -1, -1));

        jLabel62.setText("sandbox");
        jPOtpSend.add(jLabel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 118, -1, -1));

        jLabel63.setText("app_id");
        jPOtpSend.add(jLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 144, -1, -1));

        jLabel64.setText("encoding");
        jPOtpSend.add(jLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        jLabel65.setText("code_len");
        jPOtpSend.add(jLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 196, -1, -1));

        jLabel66.setText("max_retry");
        jPOtpSend.add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 222, -1, -1));

        jLabel67.setText("ttl");
        jPOtpSend.add(jLabel67, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 248, -1, -1));

        otpSendUrl.setText("https://api.smshosting.it/rest/api/verify/send");
        jPOtpSend.add(otpSendUrl, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 12, 630, -1));
        jPOtpSend.add(otpSendTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 40, 630, -1));

        otpSendText.setText("Codice ${verify_code}");
        jPOtpSend.add(otpSendText, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 66, 630, -1));
        jPOtpSend.add(otpSendFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 92, 630, -1));
        jPOtpSend.add(otpSendAppId, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 141, 630, -1));
        jPOtpSend.add(otpSendCodeLen, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 193, 630, -1));
        jPOtpSend.add(otpSendMaxRetry, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 219, 630, -1));
        jPOtpSend.add(otpSendTtl, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 245, 630, -1));

        otpSendResponse.setColumns(20);
        otpSendResponse.setRows(5);
        jScrollPane9.setViewportView(otpSendResponse);

        jPOtpSend.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 283, 1257, 337));

        otpSendPost.setText("POST");
        otpSendPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otpSendPostActionPerformed(evt);
            }
        });
        jPOtpSend.add(otpSendPost, new org.netbeans.lib.awtextra.AbsoluteConstraints(1093, 11, 143, -1));

        jLabel68.setText("Accept");
        jPOtpSend.add(jLabel68, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 50, -1, -1));

        otpSendAccept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "application/json", "application/xml" }));
        jPOtpSend.add(otpSendAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 70, 143, -1));

        otpSendSandbox.setSelected(true);
        jPOtpSend.add(otpSendSandbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, -1, -1));

        otpSendEncoding.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "7BIT", "UCS2", "AUTO" }));
        jPOtpSend.add(otpSendEncoding, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 121, -1));

        tab.addTab("OTP send", jPOtpSend);

        jPOtpCheck.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel69.setText("url");
        jPOtpCheck.add(jLabel69, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, -1, -1));

        jLabel70.setText("verify_id");
        jPOtpCheck.add(jLabel70, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 43, -1, -1));

        jLabel71.setText("verify_code");
        jPOtpCheck.add(jLabel71, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 69, -1, -1));

        jLabel72.setText("ip_address");
        jPOtpCheck.add(jLabel72, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 95, -1, -1));

        otpCheckUrl.setText("https://api.smshosting.it/rest/api/verify/check");
        jPOtpCheck.add(otpCheckUrl, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 12, 630, -1));
        jPOtpCheck.add(otpCheckVerifyId, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 40, 630, -1));
        jPOtpCheck.add(otpCheckVerifyCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 66, 630, -1));
        jPOtpCheck.add(otpCheckIpAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 92, 630, -1));

        otpCheckResponse.setColumns(20);
        otpCheckResponse.setRows(5);
        jScrollPane10.setViewportView(otpCheckResponse);

        jPOtpCheck.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 1247, 490));

        otpCheckGet.setText("GET");
        otpCheckGet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otpCheckGetActionPerformed(evt);
            }
        });
        jPOtpCheck.add(otpCheckGet, new org.netbeans.lib.awtextra.AbsoluteConstraints(1093, 11, 154, -1));

        jLabel73.setText("Accept");
        jPOtpCheck.add(jLabel73, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 50, -1, -1));

        otpCheckAccept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "application/json", "application/xml" }));
        jPOtpCheck.add(otpCheckAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 70, 154, -1));

        tab.addTab("OTP Check", jPOtpCheck);

        jPOtpSearch.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel74.setText("url");
        jPOtpSearch.add(jLabel74, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, -1, -1));

        jLabel75.setText("verify_id");
        jPOtpSearch.add(jLabel75, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 43, -1, -1));

        otpSearchUrl.setText("https://api.smshosting.it/rest/api/verify/search");
        jPOtpSearch.add(otpSearchUrl, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 12, 630, -1));
        jPOtpSearch.add(otpSearchVerifyId, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 630, -1));

        otpSearchGet.setText("GET");
        otpSearchGet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otpSearchGetActionPerformed(evt);
            }
        });
        jPOtpSearch.add(otpSearchGet, new org.netbeans.lib.awtextra.AbsoluteConstraints(1075, 11, 172, -1));

        jLabel76.setText("Accept");
        jPOtpSearch.add(jLabel76, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 50, -1, -1));

        otpSearchAccept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "application/json", "application/xml" }));
        jPOtpSearch.add(otpSearchAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 70, 172, -1));

        otpSearchResponse.setColumns(20);
        otpSearchResponse.setRows(5);
        jScrollPane11.setViewportView(otpSearchResponse);

        jPOtpSearch.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 129, 1257, 491));

        tab.addTab("OTP Search", jPOtpSearch);

        jPOtpCommand.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel77.setText("url");
        jPOtpCommand.add(jLabel77, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, -1, -1));

        jLabel78.setText("verify_id");
        jPOtpCommand.add(jLabel78, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 43, -1, -1));

        jLabel79.setText("command");
        jPOtpCommand.add(jLabel79, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 69, -1, -1));

        otpCommandUrl.setText("https://api.smshosting.it/rest/api/verify/command");
        jPOtpCommand.add(otpCommandUrl, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 12, 630, -1));
        jPOtpCommand.add(otpCommandVerifyId, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 40, 630, -1));

        otpCommandCommand.setText("DELETE");
        jPOtpCommand.add(otpCommandCommand, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 66, 630, -1));

        otpCommandResponse.setColumns(20);
        otpCommandResponse.setRows(5);
        jScrollPane12.setViewportView(otpCommandResponse);

        jPOtpCommand.add(jScrollPane12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 1257, 490));

        otpCommandPost.setText("POST");
        otpCommandPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otpCommandPostActionPerformed(evt);
            }
        });
        jPOtpCommand.add(otpCommandPost, new org.netbeans.lib.awtextra.AbsoluteConstraints(1067, 11, 180, -1));

        jLabel80.setText("Accept");
        jPOtpCommand.add(jLabel80, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 60, -1, -1));

        otpCommandAccept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "application/json", "application/xml" }));
        jPOtpCommand.add(otpCommandAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 80, 180, -1));

        tab.addTab("OTP Command", jPOtpCommand);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tab)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(auth_key, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(auth_secret, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(auth_key, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(auth_secret, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userGetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userGetActionPerformed
        try {
            HttpResponse<String> user_response = Unirest.get(userUrl.getText())
                    .header("accept", userAccept.getSelectedItem().toString())
                    .basicAuth(auth_key.getText(), auth_secret.getText())
                    .asString();
            userResponse.setText(format(user_response.getBody().toString(), userAccept.getSelectedItem().toString()));
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_userGetActionPerformed

    private void smsSendPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smsSendPostActionPerformed

        try {
            // SMS send
            HttpResponse<String> sms_send_response = Unirest.post(smsSendUrl.getText())
                    .header("accept", smsSendAccept.getSelectedItem().toString())
                    .basicAuth(auth_key.getText(), auth_secret.getText())
                    .field("from", smsSendFrom.getText())
                    .field("to", smsSendTo.getText())
                    .field("group", smsSendGroup.getText())
                    .field("text", smsSendText.getText())
                    .field("date", smsSendDate.getText())
                    .field("transactionId", smsSendTransaction.getText())
                    .field("sandbox", smsSendSandbox.isSelected())
                    .field("statusCallback", smsSendCallBack.getText())
                    .field("encoding", smsSendEncoding.getSelectedItem().toString())
                    .asString();
            smsSendResult.setText(format(sms_send_response.getBody().toString(), smsSendAccept.getSelectedItem().toString()));
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_smsSendPostActionPerformed

    private void smsSendbulkPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smsSendbulkPostActionPerformed
        try {
            // SMS sendbulk
            HttpResponse<String> sms_send_response = Unirest.post(smsSendbulkUrl.getText())
                    .header("accept", smsSendbulkAccept.getSelectedItem().toString())
                    .basicAuth(auth_key.getText(), auth_secret.getText())
                    .field("from", smsSendbulkFrom.getText())
                    .field("to", smsSendbulkTo.getText())
                    .field("group", smsSendbulkGroup.getText())
                    .field("text", smsSendbulkText.getText())
                    .field("date", smsSendbulkDate.getText())
                    .field("transactionId", smsSendbulkTransaction.getText())
                    .field("sandbox", smsSendbulkSandbox.isSelected())
                    .field("statusCallback", smsSendbulkCallback.getText())
                    .field("encoding", smsSendbulkEncoding.getSelectedItem().toString())
                    .asString();
            smsSendbulkResult.setText(format(sms_send_response.getBody().toString(), smsSendbulkAccept.getSelectedItem().toString()));
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_smsSendbulkPostActionPerformed

    private void smsEstimatePostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smsEstimatePostActionPerformed

        try {
            // SMS estimate
            HttpResponse<String> sms_estimate_response = Unirest.post(smsEstimateUrl.getText())
                    .header("accept", smsEstimateAccept.getSelectedItem().toString())
                    .basicAuth(auth_key.getText(), auth_secret.getText())
                    .field("from", smsEstimateFrom.getText())
                    .field("to", smsEstimateTo.getText())
                    .field("group", smsEstimateGroup.getText())
                    .field("text", smsEstimateText.getText())
                    .field("encoding", smsEstimateEncoding.getSelectedItem().toString())
                    .asString();
            smsEstimateResult.setText(format(sms_estimate_response.getBody().toString(), smsEstimateAccept.getSelectedItem().toString()));
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_smsEstimatePostActionPerformed

    private void smsCancelPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smsCancelPostActionPerformed
        try {
            // SMS estimate
            HttpResponse<String> sms_cancel_response = Unirest.post(smsCancelUrl.getText())
                    .header("accept", smsCancelAccept.getSelectedItem().toString())
                    .basicAuth(auth_key.getText(), auth_secret.getText())
                    .field("id", smsCancelId.getText())
                    .field("transactionId", smsCancelTransaction.getText())
                    .asString();
            smsCancelResponse.setText(format(sms_cancel_response.getBody().toString(), smsCancelAccept.getSelectedItem().toString()));
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_smsCancelPostActionPerformed

    private void smsSearchGetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smsSearchGetActionPerformed
        try {
            HttpResponse<String> smsSearch_response = Unirest.get(smsSearchUrl.getText())
                    .header("accept", smsSearchAccept.getSelectedItem().toString())
                    .basicAuth(auth_key.getText(), auth_secret.getText())
                    .queryString("id", smsSearchId.getText())
                    .queryString("transactionId", smsSearchTransaction.getText())
                    .queryString("msisdn", smsSearchMsisdn.getText())
                    .queryString("fromDate", smsSearchFromDate.getText())
                    .queryString("toDate", smsSearchToDate.getText())
                    .queryString("status", smsSearchStatus.getText())
                    .queryString("offset", smsSearchOffset.getText())
                    .queryString("limit", smsSearchLimit.getText())
                    .asString();
            smsSearchResult.setText(format(smsSearch_response.getBody().toString(), smsSearchAccept.getSelectedItem().toString()));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_smsSearchGetActionPerformed

    private void smsRecvSearchGetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smsRecvSearchGetActionPerformed
        try {
            HttpResponse<String> smsRecvSearch_response = Unirest.get(smsRecvSearchUrl.getText())
                    .header("accept", smsRecvSearchAccept.getSelectedItem().toString())
                    .basicAuth(auth_key.getText(), auth_secret.getText())
                    .queryString("from", smsRecvSearchFrom.getText())
                    .queryString("simIdRef", smsRecvSearchSimRefId.getText())
                    .queryString("fromDate", smsRecvSearchFromDate.getText())
                    .queryString("toDate", smsRecvSearchToDate.getText())
                    .queryString("offset", smsRecvSearchOffset.getText())
                    .queryString("limit", smsRecvSearchLimit.getText())
                    .asString();
            smsRecvSearchResponse.setText(format(smsRecvSearch_response.getBody().toString(), smsRecvSearchAccept.getSelectedItem().toString()));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_smsRecvSearchGetActionPerformed

    private void smsSimListGetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smsSimListGetActionPerformed
        try {
            HttpResponse<String> smsSimList_response = Unirest.get(smsSimListUrl.getText())
                    .header("accept", smsSimListAccept.getSelectedItem().toString())
                    .basicAuth(auth_key.getText(), auth_secret.getText())
                    .asString();
            smsSimListResponse.setText(format(smsSimList_response.getBody().toString(), smsSimListAccept.getSelectedItem().toString()));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_smsSimListGetActionPerformed

    private void otpSendPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otpSendPostActionPerformed
        try {
            // SMS send
            HttpResponse<String> otp_send_response = Unirest.post(otpSendUrl.getText())
                    .header("accept", otpSendAccept.getSelectedItem().toString())
                    .basicAuth(auth_key.getText(), auth_secret.getText())
                    .field("from", otpSendFrom.getText())
                    .field("to", otpSendTo.getText())
                    .field("text", otpSendText.getText())
                    .field("sandbox", otpSendSandbox.isSelected())
                    .field("appId", otpSendAppId.getText())
                    .field("encoding", otpSendEncoding.getSelectedItem().toString())
                    .field("code_len", otpSendCodeLen.getText())
                    .field("max_retry", otpSendMaxRetry.getText())
                    .field("ttl", otpSendTtl.getText())
                    .asString();
            otpSendResponse.setText(format(otp_send_response.getBody().toString(), otpSendAccept.getSelectedItem().toString()));
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_otpSendPostActionPerformed

    private void otpCheckGetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otpCheckGetActionPerformed
        try {
            HttpResponse<String> otpCheck_response = Unirest.get(otpCheckUrl.getText())
                    .header("accept", otpCheckAccept.getSelectedItem().toString())
                    .basicAuth(auth_key.getText(), auth_secret.getText())
                    .queryString("verify_id", otpCheckVerifyId.getText())
                    .queryString("verify_code", otpCheckVerifyCode.getText())
                    .queryString("ip_address", otpCheckIpAddress.getText())
                    .asString();
            otpCheckResponse.setText(format(otpCheck_response.getBody().toString(), otpCheckAccept.getSelectedItem().toString()));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_otpCheckGetActionPerformed

    private void otpSearchGetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otpSearchGetActionPerformed
        try {
            HttpResponse<String> otpSearch_response = Unirest.get(otpSearchUrl.getText())
                    .header("accept", otpSearchAccept.getSelectedItem().toString())
                    .basicAuth(auth_key.getText(), auth_secret.getText())
                    .queryString("verify_id", otpSearchVerifyId.getText())
                    .asString();
            otpSearchResponse.setText(format(otpSearch_response.getBody().toString(), otpSearchAccept.getSelectedItem().toString()));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_otpSearchGetActionPerformed

    private void otpCommandPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otpCommandPostActionPerformed
        try {
            // SMS send
            HttpResponse<String> otp_command_response = Unirest.post(otpCommandUrl.getText())
                    .header("accept", otpCommandAccept.getSelectedItem().toString())
                    .basicAuth(auth_key.getText(), auth_secret.getText())
                    .field("verify_id", otpCommandVerifyId.getText())
                    .field("command", otpCommandCommand.getText())
                    .asString();
            otpCommandResponse.setText(format(otp_command_response.getBody().toString(), otpCommandAccept.getSelectedItem().toString()));
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_otpCommandPostActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Preferences prefs = Preferences.userNodeForPackage(it.smshosting.smshostingapitest.Main.class);

        prefs.put("AUTH_KEY", auth_key.getText());
        prefs.put("AUTH_SECRET", auth_secret.getText());
        try {
            prefs.flush();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Preferences prefs = Preferences.userNodeForPackage(it.smshosting.smshostingapitest.Main.class);
        auth_key.setText(prefs.get("AUTH_KEY", ""));
        auth_secret.setText(prefs.get("AUTH_SECRET", ""));

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main dialog = new Main(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public String format(String response, String accept) {
        String ris = response;
        try {
            if ("application/json".equalsIgnoreCase(accept)) {
                ris = formatJson(response);
            }
            if ("application/xml".equalsIgnoreCase(accept)) {
                ris = formatXml(response);
            }

        } catch (Exception e) {
            e.printStackTrace();
            ris = response;
        }
        return ris;
    }

    public String formatJson(String response) {
        JsonParser parser = new JsonParser();
        Gson gson = new GsonBuilder().setPrettyPrinting().create();

        JsonElement el = parser.parse(response);
        return gson.toJson(el);
    }

    public static String formatXml(String input) {
        int indent = 3;
        try {
            Source xmlInput = new StreamSource(new StringReader(input));
            StringWriter stringWriter = new StringWriter();
            StreamResult xmlOutput = new StreamResult(stringWriter);
            TransformerFactory transformerFactory = TransformerFactory.newInstance();
            transformerFactory.setAttribute("indent-number", indent);
            Transformer transformer = transformerFactory.newTransformer();
            transformer.setOutputProperty(OutputKeys.INDENT, "yes");
            transformer.transform(xmlInput, xmlOutput);
            return xmlOutput.getWriter().toString();
        } catch (Exception e) {
            throw new RuntimeException(e); // simple exception handling, please review it
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField auth_key;
    private javax.swing.JTextField auth_secret;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPEstimate;
    private javax.swing.JPanel jPOtpCheck;
    private javax.swing.JPanel jPOtpCommand;
    private javax.swing.JPanel jPOtpSearch;
    private javax.swing.JPanel jPOtpSend;
    private javax.swing.JPanel jPSMSSend;
    private javax.swing.JPanel jPSendbulk;
    private javax.swing.JPanel jPSmsCancel;
    private javax.swing.JPanel jPSmsRecvSearch;
    private javax.swing.JPanel jPSmsSimList;
    private javax.swing.JPanel jPUser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JPanel jpSmsSearch;
    private javax.swing.JComboBox<String> otpCheckAccept;
    private javax.swing.JButton otpCheckGet;
    private javax.swing.JTextField otpCheckIpAddress;
    private javax.swing.JTextArea otpCheckResponse;
    private javax.swing.JTextField otpCheckUrl;
    private javax.swing.JTextField otpCheckVerifyCode;
    private javax.swing.JTextField otpCheckVerifyId;
    private javax.swing.JComboBox<String> otpCommandAccept;
    private javax.swing.JTextField otpCommandCommand;
    private javax.swing.JButton otpCommandPost;
    private javax.swing.JTextArea otpCommandResponse;
    private javax.swing.JTextField otpCommandUrl;
    private javax.swing.JTextField otpCommandVerifyId;
    private javax.swing.JComboBox<String> otpSearchAccept;
    private javax.swing.JButton otpSearchGet;
    private javax.swing.JTextArea otpSearchResponse;
    private javax.swing.JTextField otpSearchUrl;
    private javax.swing.JTextField otpSearchVerifyId;
    private javax.swing.JComboBox<String> otpSendAccept;
    private javax.swing.JTextField otpSendAppId;
    private javax.swing.JTextField otpSendCodeLen;
    private javax.swing.JComboBox<String> otpSendEncoding;
    private javax.swing.JTextField otpSendFrom;
    private javax.swing.JTextField otpSendMaxRetry;
    private javax.swing.JButton otpSendPost;
    private javax.swing.JTextArea otpSendResponse;
    private javax.swing.JCheckBox otpSendSandbox;
    private javax.swing.JTextField otpSendText;
    private javax.swing.JTextField otpSendTo;
    private javax.swing.JTextField otpSendTtl;
    private javax.swing.JTextField otpSendUrl;
    private javax.swing.JComboBox<String> smsCancelAccept;
    private javax.swing.JTextField smsCancelId;
    private javax.swing.JButton smsCancelPost;
    private javax.swing.JTextArea smsCancelResponse;
    private javax.swing.JTextField smsCancelTransaction;
    private javax.swing.JTextField smsCancelUrl;
    private javax.swing.JComboBox<String> smsEstimateAccept;
    private javax.swing.JComboBox<String> smsEstimateEncoding;
    private javax.swing.JTextField smsEstimateFrom;
    private javax.swing.JTextField smsEstimateGroup;
    private javax.swing.JButton smsEstimatePost;
    private javax.swing.JTextArea smsEstimateResult;
    private javax.swing.JTextField smsEstimateText;
    private javax.swing.JTextField smsEstimateTo;
    private javax.swing.JTextField smsEstimateUrl;
    private javax.swing.JComboBox<String> smsRecvSearchAccept;
    private javax.swing.JTextField smsRecvSearchFrom;
    private javax.swing.JTextField smsRecvSearchFromDate;
    private javax.swing.JButton smsRecvSearchGet;
    private javax.swing.JTextField smsRecvSearchLimit;
    private javax.swing.JTextField smsRecvSearchOffset;
    private javax.swing.JTextArea smsRecvSearchResponse;
    private javax.swing.JTextField smsRecvSearchSimRefId;
    private javax.swing.JTextField smsRecvSearchToDate;
    private javax.swing.JTextField smsRecvSearchUrl;
    private javax.swing.JComboBox<String> smsSearchAccept;
    private javax.swing.JTextField smsSearchFromDate;
    private javax.swing.JButton smsSearchGet;
    private javax.swing.JTextField smsSearchId;
    private javax.swing.JTextField smsSearchLimit;
    private javax.swing.JTextField smsSearchMsisdn;
    private javax.swing.JTextField smsSearchOffset;
    private javax.swing.JTextArea smsSearchResult;
    private javax.swing.JTextField smsSearchStatus;
    private javax.swing.JTextField smsSearchToDate;
    private javax.swing.JTextField smsSearchTransaction;
    private javax.swing.JTextField smsSearchUrl;
    private javax.swing.JComboBox<String> smsSendAccept;
    private javax.swing.JTextField smsSendCallBack;
    private javax.swing.JTextField smsSendDate;
    private javax.swing.JComboBox<String> smsSendEncoding;
    private javax.swing.JTextField smsSendFrom;
    private javax.swing.JTextField smsSendGroup;
    private javax.swing.JButton smsSendPost;
    private javax.swing.JTextArea smsSendResult;
    private javax.swing.JCheckBox smsSendSandbox;
    private javax.swing.JTextField smsSendText;
    private javax.swing.JTextField smsSendTo;
    private javax.swing.JTextField smsSendTransaction;
    private javax.swing.JTextField smsSendUrl;
    private javax.swing.JComboBox<String> smsSendbulkAccept;
    private javax.swing.JTextField smsSendbulkCallback;
    private javax.swing.JTextField smsSendbulkDate;
    private javax.swing.JComboBox<String> smsSendbulkEncoding;
    private javax.swing.JTextField smsSendbulkFrom;
    private javax.swing.JTextField smsSendbulkGroup;
    private javax.swing.JButton smsSendbulkPost;
    private javax.swing.JTextArea smsSendbulkResult;
    private javax.swing.JCheckBox smsSendbulkSandbox;
    private javax.swing.JTextField smsSendbulkText;
    private javax.swing.JTextField smsSendbulkTo;
    private javax.swing.JTextField smsSendbulkTransaction;
    private javax.swing.JTextField smsSendbulkUrl;
    private javax.swing.JComboBox<String> smsSimListAccept;
    private javax.swing.JToggleButton smsSimListGet;
    private javax.swing.JTextArea smsSimListResponse;
    private javax.swing.JTextField smsSimListUrl;
    private javax.swing.JTabbedPane tab;
    private javax.swing.JComboBox<String> userAccept;
    private javax.swing.JButton userGet;
    private javax.swing.JTextArea userResponse;
    private javax.swing.JTextField userUrl;
    // End of variables declaration//GEN-END:variables
}
